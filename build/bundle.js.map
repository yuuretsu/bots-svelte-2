{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-icons/components/IconBase.svelte","../../node_modules/svelte-icons/md/MdAdd.svelte","../../src/components/Accordion.svelte","../../src/components/DragWrapper.svelte","../../src/components/Sidebar.svelte","../../node_modules/svelte-icons/md/MdMenu.svelte","../../node_modules/svelte-icons/md/MdClose.svelte","../../node_modules/svelte-icons/md/MdPlayArrow.svelte","../../node_modules/svelte-icons/md/MdPause.svelte","../../node_modules/svelte-icons/md/MdSkipNext.svelte","../../node_modules/svelte-icons/md/MdReplay.svelte","../../src/components/IconSwitch.svelte","../../src/components/ControlsPanel.svelte","../../src/lib/helpers.ts","../../src/lib/grid.ts","../../src/lib/pixels.ts","../../src/components/SquareWorld.svelte","../../src/lib/color.ts","../../src/lib/world.ts","../../src/components/Bot.svelte","../../src/lib/world-block.ts","../../node_modules/svelte/store/index.mjs","../../src/lib/gene.ts","../../src/lib/genome.ts","../../src/lib/gene-tamplates.ts","../../src/components/CheckboxGroup.svelte","../../src/components/App.svelte","../../src/lib/loop.ts","../../src/index.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let title = null;\n  export let viewBox;\n</script>\n\n<style>\n  svg {\n    stroke: currentColor;\n    fill: currentColor;\n    stroke-width: 0;\n    width: 100%;\n    height: auto;\n    max-height: 100%;\n  }  \n</style>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" {viewBox}>\n  {#if title}\n    <title>{title}</title>\n  {/if}\n  <slot />\n</svg>\n","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n        </IconBase>\n      ","<script>\n  import MdAdd from \"svelte-icons/md/MdAdd.svelte\";\n\n  export let title;\n  export let opened = false;\n</script>\n\n<div class=\"accordion\" class:opened>\n  <label class=\"header\" class:opened>\n    <input class=\"visually-hidden\" type=\"checkbox\" bind:checked={opened} />\n    <span class=\"title\">{title}</span>\n    <div class=\"icon header__icon\" class:opened>\n      <MdAdd />\n    </div>\n  </label>\n  {#if opened}\n    <div class=\"body\">\n      <slot />\n    </div>\n  {/if}\n</div>\n\n<style>\n  .accordion {\n    border-radius: 10px;\n  }\n  .accordion.opened {\n    box-shadow: var(--shadow);\n  }\n  .header {\n    display: flex;\n    justify-content: space-between;\n    box-sizing: border-box;\n    cursor: pointer;\n    height: 20px;\n    align-items: center;\n    user-select: none;\n    background-color: transparent;\n    border-radius: 10px;\n    font-weight: bold;\n    transition: height 0.2s, padding 0.2s;\n  }\n  .header.opened {\n    height: 40px;\n    padding: 0 10px;\n    background-color: var(--col-bg-1);\n  }\n  .header.opened:hover {\n    background-color: var(--col-bg-2);\n  }\n  .header__icon {\n    margin-left: 10px;\n  }\n\n  .title {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .icon {\n    --col-bg: var(--col-bg-1);\n    min-width: 20px;\n    min-height: 20px;\n    max-width: 20px;\n    max-height: 20px;\n    border-radius: 10px;\n    background-color: var(--col-bg);\n    box-shadow: 0 0 0 3px var(--col-bg);\n    transform: translateX(-3px);\n    transition: 0.2s;\n  }\n  .icon.opened {\n    --col-bg: transparent;\n    transform: rotate(45deg);\n  }\n  .header:not(.header.opened):hover .icon {\n    --col-bg: var(--col-bg-2);\n  }\n\n  .body {\n    padding: 10px;\n  }\n\n  @keyframes anim {\n    from {\n      opacity: 0;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  function onMouseDown(e: MouseEvent) {\n    initPos = [e.clientX - currentPos[0], e.clientY - currentPos[1]];\n    onMouseMove = mouseMoveInner;\n    onMouseUp = clearMouseEvents;\n  }\n\n  function mouseMoveInner(e: MouseEvent) {\n    e.preventDefault();\n    currentPos = [e.clientX - initPos[0], e.clientY - initPos[1]];\n    document.body.style.cursor = \"grabbing\";\n  }\n\n  function clearMouseEvents() {\n    onMouseMove = undefined;\n    onMouseUp = undefined;\n    document.body.style.cursor = \"\";\n    if (!document.body.getAttribute(\"style\"))\n      document.body.removeAttribute(\"style\");\n  }\n\n  function onTouchStart(e: TouchEvent) {\n    let x = e.touches[0]?.clientX || 0;\n    let y = e.touches[0]?.clientY || 0;\n    initPos = [x - currentPos[0], y - currentPos[1]];\n    onTouchMove = touchMoveInner;\n    onTouchEnd = clearTouchEvents;\n  }\n\n  function touchMoveInner(e: TouchEvent) {\n    currentPos = [\n      e.touches[0]!.clientX - initPos[0],\n      e.touches[0]!.clientY - initPos[1],\n    ];\n  }\n\n  function clearTouchEvents() {\n    onTouchMove = undefined;\n    onTouchEnd = undefined;\n  }\n\n  export let height: string = \"auto\";\n  export let currentPos: [number, number] = [0, 0];\n  let onMouseMove: svelte.JSX.MouseEventHandler<Window> | undefined;\n  let onMouseUp: svelte.JSX.MouseEventHandler<Window> | undefined;\n  let onTouchMove: svelte.JSX.TouchEventHandler<Window> | undefined;\n  let onTouchEnd: svelte.JSX.TouchEventHandler<Window> | undefined;\n  let initPos: [number, number] = [0, 0];\n</script>\n\n<svelte:window\n  on:mousemove={onMouseMove}\n  on:mouseup={onMouseUp}\n  on:touchmove={onTouchMove}\n  on:touchend={onTouchEnd}\n/>\n<div\n  class=\"drag-wrapper\"\n  style={`height: ${height}`}\n  on:mousedown={onMouseDown}\n  on:touchstart={onTouchStart}\n>\n  <div style={`transform: translate(${currentPos[0]}px, ${currentPos[1]}px);`}>\n    <slot />\n  </div>\n</div>\n\n<style>\n  .drag-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    touch-action: none;\n    overflow: hidden;\n    background-color: var(--col-bg-1);\n    /* box-shadow: inset 0 0 0 1px green, inset 0 0 0 2px red; */\n  }\n</style>\n","<script>\n  export let opened = true;\n</script>\n\n<div class=\"sidebar\" class:opened>\n  <slot />\n</div>\n\n<style>\n  .sidebar {\n    position: fixed;\n    box-sizing: border-box;\n    left: -300px;\n    top: 0px;\n    width: 300px;\n    height: 100%;\n    overflow-y: auto;\n    background-color: var(--col-bg-0);\n    color: var(--col-fg-0);\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\n    padding: 20px;\n    padding-top: calc(20px * 2 + 55px);\n    padding-bottom: 0;\n    /* backdrop-filter: blur(4px);\n    -webkit-backdrop-filter: blur(4px); */\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n    /* opacity: 0; */\n    transition: 0.2s;\n  }\n\n  .sidebar::-webkit-scrollbar {\n    display: none;\n  }\n\n  :global(.sidebar > *:last-child) {\n    margin-bottom: 20px;\n  }\n\n  :global(.sidebar > *) {\n    margin-bottom: 20px;\n  }\n\n  .opened {\n    left: 0;\n    /* max-height: 100px; */\n    opacity: 1;\n  }\n</style>\n","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n        </IconBase>\n      ","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        </IconBase>\n      ","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M8 5v14l11-7z\" />\n        </IconBase>\n      ","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n        </IconBase>\n      ","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\" />\n        </IconBase>\n      ","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\" />\n        </IconBase>\n      ","<script lang=\"ts\">\n  export let width: string;\n  export let height = width;\n  export let switched = false;\n\n  let style = `width: ${width}; height: ${height};`;\n</script>\n\n<div class=\"icon-switch\" {style}>\n  <div class=\"icon-switch__inner\" class:switched>\n    <div class=\"icon\" class:hidden={switched}>\n      <slot name=\"a\" />\n    </div>\n    <div class=\"icon\" class:hidden={!switched}>\n      <slot name=\"b\" />\n    </div>\n  </div>\n</div>\n\n<style>\n  .icon-switch {\n    overflow: hidden;\n    border-radius: 5px;\n  }\n\n  .icon {\n    transition-property: transform, opacity;\n    transition-duration: 0.2s;\n    transition-timing-function: ease-in-out;\n  }\n\n  .icon.hidden {\n    opacity: 0;\n    transform: scale(0);\n  }\n\n  .icon-switch__inner {\n    display: flex;\n    flex-direction: column;\n    transition-duration: 0.2s;\n    transition-timing-function: ease-in-out;\n  }\n\n  .icon-switch__inner.switched {\n    transform: translateY(-50%);\n  }\n</style>\n","<script lang=\"ts\">\n  import MdMenu from \"svelte-icons/md/MdMenu.svelte\";\n  import MdClose from \"svelte-icons/md/MdClose.svelte\";\n  import MdPlayArrow from \"svelte-icons/md/MdPlayArrow.svelte\";\n  import MdPause from \"svelte-icons/md/MdPause.svelte\";\n  import MdSkipNext from \"svelte-icons/md/MdSkipNext.svelte\";\n  import MdReplay from \"svelte-icons/md/MdReplay.svelte\";\n\n  import { createEventDispatcher } from \"svelte\";\n\n  import IconSwitch from \"./IconSwitch.svelte\";\n\n  function onClickMenu() {\n    sidebarOpened = !sidebarOpened;\n  }\n\n  function onClickPlayPause() {\n    play = !play;\n  }\n\n  function onClickStep() {\n    dispatch(\"step\");\n  }\n\n  function onClickRestart() {\n    dispatch(\"restart\");\n  }\n\n  export let sidebarOpened: boolean;\n  export let play: boolean;\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<div class=\"wrapper\">\n  <button class=\"btn\" on:click={onClickMenu}>\n    <IconSwitch width=\"25px\" switched={sidebarOpened}>\n      <div class=\"icon\" slot=\"a\">\n        <span class=\"visually-hidden\">open menu</span>\n        <MdMenu />\n      </div>\n      <div class=\"icon\" slot=\"b\">\n        <span class=\"visually-hidden\">close menu</span>\n        <MdClose />\n      </div>\n    </IconSwitch>\n  </button>\n  <button class=\"btn\" on:click={onClickPlayPause}>\n    <IconSwitch width=\"25px\" switched={play}>\n      <div class=\"icon\" slot=\"a\">\n        <span class=\"visually-hidden\">play</span>\n        <MdPlayArrow />\n      </div>\n      <div class=\"icon\" slot=\"b\">\n        <span class=\"visually-hidden\">pause</span>\n        <MdPause />\n      </div>\n    </IconSwitch>\n  </button>\n  <button class=\"btn\" on:click={onClickStep}>\n    <div class=\"icon\">\n      <span class=\"visually-hidden\">step</span>\n      <MdSkipNext />\n    </div>\n  </button>\n  <button class=\"btn\" on:click={onClickRestart}>\n    <div class=\"icon\">\n      <span class=\"visually-hidden\">restart</span>\n      <MdReplay />\n    </div>\n  </button>\n</div>\n\n<style>\n  .wrapper {\n    position: fixed;\n    display: flex;\n    left: 20px;\n    top: 20px;\n    padding: 10px;\n    background-color: var(--col-bg-0);\n    /* backdrop-filter: blur(5px);\n    -webkit-backdrop-filter: blur(5px); */\n    border-radius: 100px;\n    box-shadow: var(--shadow);\n  }\n\n  .btn {\n    display: block;\n    border: none;\n    padding: 5px;\n    border-radius: 50px;\n    cursor: pointer;\n    background-color: var(--col-bg-1);\n    color: var(--col-fg-0);\n  }\n\n  .btn:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  .btn:hover {\n    background-color: var(--col-bg-2);\n  }\n\n  .icon {\n    max-width: 25px;\n    max-height: 25px;\n    min-width: 25px;\n    min-height: 25px;\n    transition-duration: 0.2s;\n  }\n\n  .btn:active .icon {\n    transform: scale(0.75);\n  }\n</style>\n","export let random;\nexport const initiallySeed = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\nsetupRandom(initiallySeed);\nexport function setupRandom(seed) {\n    function mulberry32(a) {\n        return function () {\n            var t = a += 0x6D2B79F5;\n            t = Math.imul(t ^ t >>> 15, t | 1);\n            t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n            return ((t ^ t >>> 14) >>> 0) / 4294967296;\n        };\n    }\n    random = mulberry32(seed);\n    console.log(random());\n    return random;\n}\nexport function randFloat(bottom, top, rand = random) {\n    return rand() * (top - bottom) + bottom;\n}\nexport function randInt(bottom, top, rand = random) {\n    return Math.floor(randFloat(bottom, top, rand));\n}\nexport function randChoice(arr, rand = random) {\n    return arr[randInt(0, arr.length, rand)];\n}\nexport function clampCircular(min, max, number) {\n    return number >= min\n        ? number % max\n        : max - (-number % max);\n}\nexport function normalizeNumber(min, max, number) {\n    return (number - min) / (max - min);\n}\nexport function clamp(min, max, number) {\n    return Math.max(Math.min(number, max), min);\n}\nexport function lerp(a, b, t) {\n    return a + (b - a) * t;\n}\n","import { clampCircular, randInt } from \"./helpers\";\nexport class Grid {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.cells = new Array(width);\n        for (let x = 0; x < width; x++) {\n            this.cells[x] = new Array(height).fill(undefined);\n        }\n    }\n    fixCoords(x, y) {\n        return [\n            clampCircular(0, this.width, x),\n            clampCircular(0, this.height, y),\n        ];\n    }\n    randCoords() {\n        return [\n            randInt(0, this.width),\n            randInt(0, this.height)\n        ];\n    }\n    randEmpty() {\n        let coords;\n        do {\n            coords = this.randCoords();\n        } while (this.get(...coords));\n        return coords;\n    }\n    fill(value) {\n        this.cells.map(column => column.fill(value));\n        return this;\n    }\n    get(x, y) {\n        return this.cells[x][y];\n    }\n    getOr(x, y, value) {\n        const here = this.cells[x][y];\n        return here !== undefined\n            ? here\n            : value;\n    }\n    set(x, y, value) {\n        this.cells[x][y] = value;\n    }\n    remove(x, y) {\n        delete this.cells[x][y];\n    }\n    swap(x, y, x2, y2) {\n        const bufferA = this.get(x, y);\n        const bufferB = this.get(x2, y2);\n        this.set(x, y, bufferB);\n        this.set(x2, y2, bufferA);\n    }\n    forEach(func) {\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                func(this.get(x, y), x, y);\n            }\n        }\n    }\n    map(func) {\n        const next = new Grid(this.width, this.height);\n        this.forEach((value, x, y) => {\n            next.set(x, y, func(value, x, y));\n        });\n        return next;\n    }\n    flat() {\n        return Array.prototype.concat.apply([], this.cells);\n    }\n}\n","export class Pixels extends ImageData {\n    constructor(width, height) {\n        super(width, height);\n    }\n    setPixel(x, y, r, g, b, a) {\n        const pointer = (x + y * this.width) * 4;\n        this.data[pointer] = r;\n        this.data[pointer + 1] = g;\n        this.data[pointer + 2] = b;\n        this.data[pointer + 3] = a;\n        return this;\n    }\n    getPixel(x, y) {\n        const pointer = (x + y * this.width) * 4;\n        return [\n            this.data[pointer],\n            this.data[pointer + 1],\n            this.data[pointer + 2],\n            this.data[pointer + 3]\n        ];\n    }\n}\n","<script lang=\"ts\">\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import { Coords } from \"../lib/grid\";\n\n  function mousePixelCoords(e: MouseEvent, canvas: HTMLCanvasElement): Coords {\n    const rect = canvas.getBoundingClientRect();\n    const x1 = e.clientX - rect.left;\n    const y1 = e.clientY - rect.top;\n    const x = Math.floor(x1 / pixelSize);\n    const y = Math.floor(y1 / pixelSize);\n    return [x, y];\n  }\n\n  function updatePixels(imageData: ImageData, pixelSize: number) {\n    canvas.width = imageData.width * pixelSize;\n    canvas.height = imageData.height * pixelSize;\n    ctx.imageSmoothingEnabled = false;\n    tmpCanvas.width = imageData.width;\n    tmpCanvas.height = imageData.height;\n    tmpCtx.putImageData(imageData, 0, 0);\n  }\n\n  function updateMouse(mouse: Coords | null) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(tmpCanvas, 0, 0, canvas.width, canvas.height);\n    mouse && drawMouse(mouse);\n  }\n\n  function drawMouse(mouse: Coords) {\n    const [x, y] = mouse;\n    ctx.beginPath();\n    ctx.arc(\n      x * pixelSize + pixelSize / 2,\n      y * pixelSize + pixelSize / 2,\n      Math.max(pixelSize, 5),\n      0,\n      Math.PI * 2\n    );\n    ctx.stroke();\n  }\n\n  export let imageData: ImageData;\n  export let pixelSize = 5;\n\n  const dispatch = createEventDispatcher();\n\n  let mouse: Coords | null = null;\n  let canvas: HTMLCanvasElement;\n  let ctx: CanvasRenderingContext2D;\n  let tmpCanvas: HTMLCanvasElement;\n  let tmpCtx: CanvasRenderingContext2D;\n\n  onMount(() => {\n    ctx = canvas.getContext(\"2d\")!;\n    tmpCanvas = document.createElement(\"canvas\");\n    tmpCtx = tmpCanvas.getContext(\"2d\")!;\n    updatePixels(imageData, pixelSize);\n  });\n\n  $: canvas && updatePixels(imageData, pixelSize);\n  $: canvas && updateMouse(mouse);\n</script>\n\n<canvas\n  bind:this={canvas}\n  on:click={(e) => {\n    if (!mouse) return;\n    const [x, y] = mouse;\n    dispatch(\"click-block\", { x, y });\n  }}\n  on:mousemove={(e) => {\n    mouse = mousePixelCoords(e, canvas);\n  }}\n  on:mouseleave={() => (mouse = null)}\n/>\n\n<style>\n  canvas {\n    display: block;\n    background-color: var(--col-bg-0);\n    border-radius: 5px;\n    box-shadow: var(--shadow);\n  }\n</style>\n","import { lerp, randFloat, randInt } from \"./helpers\";\nexport class Rgba {\n    constructor(red, green, blue, alpha) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n    static randRgb(rand = () => randFloat(0, 1)) {\n        return new Rgba(randInt(0, 256, rand), randInt(0, 256, rand), randInt(0, 256, rand), 255);\n    }\n    interpolate(other, t, fn = lerp) {\n        return new Rgba(fn(this.red, other.red, t), fn(this.green, other.green, t), fn(this.blue, other.blue, t), fn(this.alpha, other.alpha, t));\n    }\n    toArray() {\n        return [this.red, this.green, this.blue, this.alpha];\n    }\n    toString() {\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha / 255})`;\n    }\n}\nRgba.MAX_DIF = 255 * 4;\n","import { Grid } from \"./grid\";\nimport { Pixels } from \"./pixels\";\nimport SquareWorldComponent from \"./../components/SquareWorld.svelte\";\nimport { Rgba } from \"./color\";\nimport { clampCircular, randFloat } from \"./helpers\";\nexport class World extends Grid {\n    constructor(width, height, genePool) {\n        super(width, height);\n        this.genePool = genePool;\n    }\n}\nexport class SquareWorld extends World {\n    step() {\n        const blocks = [];\n        this.forEach((value, x, y) => {\n            if (!value)\n                return;\n            blocks.push({ block: value, pos: [x, y] });\n        });\n        const shuffled = blocks.sort(() => randFloat(0, 1) - 0.5);\n        shuffled.forEach(({ block, pos }) => block.live(...pos, this));\n    }\n    getPixels() {\n        const pixels = new Pixels(this.width, this.height);\n        this.forEach((block, x, y) => {\n            if (!block)\n                return;\n            pixels.setPixel(x, y, ...(block.getColor() || new Rgba(0, 0, 0, 0))\n                .toArray());\n        });\n        return pixels;\n    }\n    getComponentProps() {\n        return { imageData: this.getPixels(), pixelSize: 7 };\n    }\n    getComponent() {\n        return SquareWorldComponent;\n    }\n    narrowToCoords(x, y, narrow, length) {\n        narrow = clampCircular(0, 8, narrow);\n        const x2 = x + SQUARE_MOORE_NEIGHBOURHOOD[narrow][0] * length;\n        const y2 = y + SQUARE_MOORE_NEIGHBOURHOOD[narrow][1] * length;\n        return this.fixCoords(x2, y2);\n    }\n}\nconst SQUARE_MOORE_NEIGHBOURHOOD = [\n    [-1, -1],\n    [0, -1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n    [0, 1],\n    [-1, 1],\n    [-1, 0],\n];\n","<script lang=\"ts\">\n  import { Bot } from \"../lib/world-block\";\n  import { createEventDispatcher } from \"svelte\";\n\n  function onClickDeselect() {\n    dispatch(\"deselect\");\n  }\n\n  const dispatch = createEventDispatcher();\n\n  export let block: Bot;\n</script>\n\n<button on:click={onClickDeselect}>Снять выделение</button>\nВозраст: {block.age}\n","import { Rgba } from \"./color\";\nimport { clamp, clampCircular, randInt } from \"./helpers\";\nimport BotComponent from \"./../components/Bot.svelte\";\nexport function createBotAbilities() {\n    return {\n        photosynthesis: 0.5,\n        attack: 0.5\n    };\n}\nexport class Bot {\n    constructor(rgba, energy, abilities, genome) {\n        this.rgba = rgba;\n        this.energy = energy;\n        this.abilities = abilities;\n        this.genome = genome;\n        this.age = 0;\n        this.health = 0.5;\n        this._narrow = randInt(0, 8);\n    }\n    set narrow(n) {\n        this._narrow = clampCircular(0, 8, n);\n    }\n    get narrow() {\n        return this._narrow;\n    }\n    multiply(pool, energyCoef) {\n        const energy = this.energy * energyCoef;\n        this.energy -= energy;\n        return new Bot(this.rgba.interpolate(new Rgba(255, 255, 255, 255), 0.1), energy, Object.assign({}, this.abilities), this.genome.replication(pool));\n    }\n    onAttack(bot, value) {\n        const REAL_VALUE = Math.min(this.energy, value);\n        this.energy -= REAL_VALUE;\n        bot.energy += REAL_VALUE;\n        this.health -= 0.1;\n        return REAL_VALUE;\n    }\n    increaseAbility(ability) {\n        for (const name in this.abilities) {\n            if (Object.prototype.hasOwnProperty.call(this.abilities, name)) {\n                this.abilities[name] = clamp(0, 1, this.abilities[name] + (name === ability\n                    ? 0.01\n                    : -0.01));\n            }\n        }\n    }\n    live(x, y, world) {\n        if (this.age > 2000 ||\n            this.energy < 1) {\n            world.remove(x, y);\n            return;\n        }\n        this.genome.doAction(this, x, y, world);\n        this.age++;\n    }\n    getComponent() {\n        return BotComponent;\n    }\n    getColor() {\n        return this.rgba;\n    }\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { Rgba } from \"./color\";\nimport { randChoice, randInt, random } from \"./helpers\";\nexport const NULL_GENE_TEMPLATE = {\n    name: 'Пустой ген',\n    description: `Ничего не происходит`,\n    defaultEnabled: false,\n    color: new Rgba(127, 127, 127, 255),\n    colorInfluence: 0.01,\n    action: (_bot, _x, _y, _world, _property) => {\n        return { completed: true, goto: null, msg: `Бездействие` };\n    }\n};\nexport const NULL_GENE = {\n    template: NULL_GENE_TEMPLATE,\n    property: {\n        option: 0,\n        branches: [0, 0],\n    }\n};\nexport function randGeneProperty(genomeLength) {\n    return {\n        option: random(),\n        branches: [\n            randInt(0, genomeLength),\n            randInt(0, genomeLength),\n        ]\n    };\n}\nexport function randGene(pool, genomeLength) {\n    return {\n        template: randChoice(Array.from(pool)) || NULL_GENE_TEMPLATE,\n        property: randGeneProperty(genomeLength)\n    };\n}\n// export function enabledGenesToPool(genes: Set<string>): GenePool {\n//   return namesToGenePool(\n//     Object\n//       .keys(genes)\n//       .filter(key => genes[key])\n//   );\n// }\nexport function namesToGenePool(names, geneTemplates) {\n    const pool = new Set();\n    for (const geneName of names) {\n        const geneTemplate = geneTemplates[geneName];\n        if (geneTemplate)\n            pool.add(geneTemplate);\n    }\n    // console.log(names, pool);\n    return pool;\n}\n","import { NULL_GENE, NULL_GENE_TEMPLATE, randGene } from \"./gene\";\nimport { clampCircular, clamp, randChoice, randFloat, randInt, random } from \"./helpers\";\nexport class Genome {\n    constructor(length) {\n        this._pointer = 0;\n        this.genes = new Array(length).fill(NULL_GENE);\n    }\n    set pointer(n) {\n        this._pointer = clampCircular(0, this.genes.length, n);\n    }\n    get pointer() {\n        return this._pointer;\n    }\n    fillRandom(pool) {\n        for (let i = 0; i < this.genes.length; i++) {\n            this.genes[i] = randGene(pool, this.genes.length);\n        }\n        return this;\n    }\n    mutateGene(pool, gene) {\n        return {\n            template: randChoice(Array.from(pool)) || NULL_GENE_TEMPLATE,\n            property: {\n                option: clamp(0, 1, gene.property.option + randFloat(-0.01, 0.01)),\n                branches: gene.property.branches.map(i => random() > 0.9\n                    ? randInt(0, this.genes.length)\n                    : i)\n            }\n        };\n    }\n    replication(pool) {\n        const genome = new Genome(this.genes.length);\n        for (let i = 0; i < this.genes.length; i++) {\n            genome.genes[i] = random() > 0.995\n                ? this.mutateGene(pool, this.genes[i] || NULL_GENE)\n                : this.genes[i] || NULL_GENE;\n        }\n        return genome;\n    }\n    doAction(bot, x, y, world) {\n        // this.recentlyUsedGenes = [];\n        for (let i = 0; i < MAX_ACTIONS; i++) {\n            const gene = this.genes[this.pointer];\n            if (!gene)\n                continue;\n            const result = gene\n                .template\n                .action(bot, x, y, world, gene.property);\n            // this.recentlyUsedGenes.push(gene);\n            // this.activeGene = gene;\n            // bot.lastActions.push(result.msg || gene.template.name);\n            if (gene.template.colorInfluence !== null && gene.template.color) {\n                bot.rgba = bot.rgba.interpolate(gene.template.color, gene.template.colorInfluence);\n            }\n            this.pointer = result.goto !== null\n                ? this.pointer = result.goto\n                : this.pointer = this.pointer + 1;\n            if (result.completed) {\n                // this.activeGene = this.recentlyUsedGenes.pop() || null;\n                return;\n            }\n            ;\n        }\n        // this.activeGene = this.recentlyUsedGenes.pop() || null;\n    }\n}\nconst MAX_ACTIONS = 8;\n","import { Rgba } from \"./color\";\nimport { lerp } from \"./helpers\";\nexport const GENES = {\n    doNothing: {\n        name: 'Отдых',\n        description: `Прибавляет 0.1 к здоровью`,\n        defaultEnabled: true,\n        color: new Rgba(100, 100, 0, 255),\n        colorInfluence: 0.01,\n        action: (bot, x, y, world, property) => {\n            const value = 0.1;\n            // bot.health = Math.min(1, bot.health + 0.1);\n            return { completed: true, goto: null, msg: `Лечение +${value}` };\n        }\n    },\n    multiply: {\n        name: 'Размножение',\n        description: `Бот теряет 1/10 энергии на попытку размножения. Если клетка перед ним пуста, энергии больше 5 единиц, а возраст больше 10 кадров, бот размножается. Потомку передается количество энергии, равное параметру гена, такое же количество вычитается из собственной энергии.`,\n        defaultEnabled: true,\n        color: new Rgba(0, 0, 200, 255),\n        colorInfluence: 0.01,\n        action: (bot, x, y, world, property) => {\n            const fCoords = world.narrowToCoords(x, y, bot.narrow, 1);\n            const fBlock = world.get(...fCoords);\n            bot.energy *= 0.9;\n            if (fBlock)\n                return { completed: true, goto: null, msg: `Размножение не удалось: спереди блок` };\n            if (bot.energy <= 5)\n                return { completed: true, goto: null, msg: `Размножение не удалось: мало энергии` };\n            if (bot.age <= 10)\n                return { completed: true, goto: null, msg: `Размножение не удалось: бот слишком молод` };\n            world.set(...fCoords, bot.multiply(world.genePool, property.option));\n            return { completed: true, goto: null, msg: `Размножение` };\n        }\n    },\n    rotate: {\n        name: 'Поворот',\n        description: `Бот поворачивается по часовой стрелке, если параметр гена > 0.5, иначе против часовой стрелки`,\n        defaultEnabled: true,\n        color: null,\n        colorInfluence: null,\n        action: (bot, x, y, world, property) => {\n            bot.narrow = property.option > 0.5\n                ? bot.narrow + 1\n                : bot.narrow - 1;\n            return { completed: false, goto: null, msg: `Поворот ${property.option > 0.5 ? 'направо' : 'налево'}` };\n        }\n    },\n    photosynthesis: {\n        name: 'Фотосинтез',\n        description: `Бот получает энергию путем фотосинтеза.При этом эффективность его фотосинтеза возрастает, а эффективность атак -- падает.Восстанавливает своё здоровье на 0.01.`,\n        defaultEnabled: true,\n        color: new Rgba(0, 255, 0, 255),\n        colorInfluence: 0.01,\n        action: (bot, x, y, world, property) => {\n            const energy = 1 * bot.abilities.photosynthesis ** 2;\n            bot.energy += energy;\n            bot.increaseAbility('photosynthesis');\n            bot.health = Math.min(1, bot.health + 0.01);\n            return { completed: true, goto: null, msg: `Фототсинтез: +${energy.toFixed(2)} энергии` };\n        }\n    },\n    attack: {\n        name: 'Атака',\n        description: `Бот атакует блок перед собой, забирая себе часть его энергии.Повышает здоровье на 0.01.`,\n        defaultEnabled: true,\n        color: new Rgba(255, 0, 0, 255),\n        colorInfluence: 0.01,\n        action: (bot, x, y, world, property) => {\n            const fBlock = world.get(...world.narrowToCoords(x, y, bot.narrow, 1));\n            let msg;\n            if (fBlock) {\n                const value = lerp(0, 5, property.option) * bot.abilities.attack ** 2;\n                const result = fBlock.onAttack(bot, value);\n                bot.increaseAbility('attack');\n                bot.health = Math.min(1, bot.health + 0.01);\n                msg = `Атака: +${result.toFixed(2)} энергии`;\n            }\n            else {\n                msg = `Атака не удалась`;\n            }\n            bot.energy -= 0.5;\n            return { completed: true, goto: null, msg };\n        }\n    },\n    moveForward: {\n        name: 'Двигаться вперед',\n        description: `Бот перемещется в клетку перед собой, если она пустая.Расходует 0.5 энергии.`,\n        defaultEnabled: true,\n        color: new Rgba(200, 200, 200, 255),\n        colorInfluence: null,\n        action: (bot, x, y, world, property) => {\n            const F_COORDS = world.narrowToCoords(x, y, bot.narrow, 1);\n            const F_BLOCK = world.get(...F_COORDS);\n            let msg;\n            if (!F_BLOCK) {\n                world.swap(x, y, ...F_COORDS);\n                msg = `Передвижение`;\n            }\n            else {\n                msg = `Передвижение не удалось`;\n            }\n            bot.energy -= 0.5;\n            return { completed: true, goto: null, msg };\n        }\n    },\n    movePointer: {\n        name: 'Переместить указатель',\n        description: `Следующая команда генома будет той, которая указана в ветке 1 текущего гена.`,\n        defaultEnabled: true,\n        color: null,\n        colorInfluence: null,\n        action: (bot, x, y, world, property) => {\n            const goto = property.branches[0];\n            const msg = `Перенос указателя → ${goto}`;\n            return { completed: false, goto, msg };\n        }\n    },\n};\n","<script lang=\"ts\">\n  import { Rgba } from \"../lib/color\";\n\n  export let values: { value: string; content: string; color?: Rgba }[] = [];\n  export let checked: string[] = [];\n  let filter = \"\";\n</script>\n\n<div class=\"wrapper\">\n  <input class=\"filter\" placeholder=\"filter\" type=\"text\" bind:value={filter} />\n  <div class=\"wrapper-inner wrapper__inner\">\n    {#each values.filter(({ content }) => content\n        .toLowerCase()\n        .match(new RegExp(filter.toLowerCase()))) as { value, content, color }}\n      <label class:checked={checked.includes(value)}>\n        <!-- {#if color}\n          <span\n            style={color && checked.includes(value)\n              ? \"background-color: \" + color.toString()\n              : \"\"}\n          />\n        {/if} -->\n        <input\n          type=\"checkbox\"\n          class=\"visually-hidden\"\n          {value}\n          bind:group={checked}\n        />\n        {@html content}\n      </label>\n    {/each}\n  </div>\n</div>\n\n<style>\n  /* .wrapper {\n    padding: 5px;\n    box-shadow: inset var(--shadow);\n    border-radius: 10px;\n  } */\n  .wrapper__inner {\n    margin-right: -5px;\n    margin-bottom: -5px;\n  }\n  .wrapper-inner {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .filter {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 5px 5px;\n    margin-bottom: 5px;\n    width: 100%;\n    border-radius: 5px;\n    border: none;\n    border-bottom: 1px solid var(--col-bg-2);\n    background-color: var(--col-bg-1);\n    outline: none;\n  }\n  label {\n    flex-grow: 1;\n    display: flex;\n    font-family: \"IBM Plex Sans\" !important;\n    align-items: center;\n    user-select: none;\n    cursor: pointer;\n    margin-right: 5px;\n    margin-bottom: 5px;\n    line-height: 20px;\n    padding-left: 5px;\n    padding-right: 10px;\n    border-radius: 10px;\n    text-transform: uppercase;\n    font-size: 0.75em;\n    font-family: monospace;\n    background-color: var(--col-bg-1);\n  }\n  label::before {\n    box-sizing: border-box;\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    background-color: rgb(0 0 0 / 50%);\n    border-radius: 5px;\n    margin-right: 5px;\n    border-bottom: 3px solid transparent;\n    border-right: 3px solid transparent;\n    transition-duration: 0.2s;\n  }\n  /* label > span {\n    width: 10px;\n    height: 10px;\n    border-radius: 5px;\n    box-shadow: inset 0 0 0 1px rgb(0 0 0 / 50%);\n    margin-right: 3px;\n  } */\n  .checked {\n    background-color: rgb(114 255 128 / 50%);\n  }\n  .checked::before {\n    width: 7px;\n    height: 10px;\n    border-bottom: 3px solid rgb(0 0 0 / 50%);\n    border-right: 3px solid rgb(0 0 0 / 50%);\n    transform: translate(3px, -1px) rotate(45deg);\n    background-color: transparent;\n    margin-right: 8px;\n    border-radius: 0;\n  }\n</style>\n","<script lang=\"ts\">\n  import Accordion from \"./Accordion.svelte\";\n  import DragWrapper from \"./DragWrapper.svelte\";\n  import Sidebar from \"./Sidebar.svelte\";\n  import ControlsPanel from \"./ControlsPanel.svelte\";\n\n  import { SquareWorld, World } from \"../lib/world\";\n  import { Bot, createBotAbilities, IWorldBlock } from \"../lib/world-block\";\n  import { onDestroy } from \"svelte\";\n  import { writable } from \"svelte/store\";\n  import { loop as createLoop } from \"./../lib/loop\";\n  import { initiallySeed, random, setupRandom } from \"../lib/helpers\";\n  import { Rgba } from \"../lib/color\";\n  import { Genome } from \"../lib/genome\";\n  import { GENES } from \"../lib/gene-tamplates\";\n  import { GenePool, namesToGenePool } from \"../lib/gene\";\n  import CheckboxGroup from \"./CheckboxGroup.svelte\";\n\n  function step() {\n    world.step();\n    worldProps = world.getComponentProps();\n    selectedBlock && (selectedBlock = selectedBlock);\n  }\n\n  function onClickStep() {\n    step();\n    $play = false;\n  }\n\n  function createWorld(width: number, height: number, genePool: GenePool) {\n    const world = new SquareWorld(width, height, genePool);\n    for (let y = 0; y < world.height; y++) {\n      for (let x = 0; x < world.width; x++) {\n        if (random() > 0.99) {\n          const color = new Rgba(255, 0, 0, 255);\n          const genome = new Genome(32).fillRandom(world.genePool);\n          world.set(x, y, new Bot(color, 100, createBotAbilities(), genome));\n        }\n      }\n    }\n    const worldProps = world.getComponentProps();\n    return { world, worldProps };\n  }\n\n  function onClickRestart() {\n    setupRandom(seed);\n    const newWorld = createWorld(\n      newWorldWidth,\n      newWorldHeight,\n      namesToGenePool(new Set(enabledGenes), GENES)\n    );\n    world = newWorld.world;\n    worldProps = newWorld.worldProps;\n  }\n\n  function onClickBlock({ detail }: { detail: { x: number; y: number } }) {\n    const { x, y } = detail;\n    selectedBlock = world.get(x, y) || null;\n    console.log(selectedBlock);\n  }\n\n  function stopLoop(intervalId: number | null) {\n    let id = intervalId;\n    if (intervalId) {\n      window.clearInterval(intervalId);\n      console.log(`stop ${intervalId} loop`);\n      intervalId = null;\n    }\n    return id;\n  }\n\n  function onSetPlay() {\n    if ($play) {\n      loop.start();\n    } else {\n      loop.stop();\n    }\n  }\n\n  let seed = initiallySeed;\n  let sidebarOpened = true;\n  let intervalId: number | null = null;\n  let play = writable(false);\n  let fps = writable(60);\n  let loop = createLoop(step, $fps, $play);\n  play.subscribe(onSetPlay);\n  fps.subscribe(() => {\n    loop.setFps($fps, $play);\n  });\n\n  let showCss = false;\n\n  let enabledGenes: string[] = Object.entries(GENES)\n    .filter(([_, template]) => template.defaultEnabled)\n    .map(([key, _]) => key);\n\n  $: world.genePool = namesToGenePool(new Set(enabledGenes), GENES);\n\n  let newWorldWidth = 50;\n  let newWorldHeight = 50;\n\n  let { world, worldProps } = createWorld(\n    newWorldWidth,\n    newWorldHeight,\n    namesToGenePool(new Set(enabledGenes), GENES)\n  );\n\n  let selectedBlock: null | IWorldBlock = null;\n\n  onDestroy(stopLoop.bind(null, intervalId));\n</script>\n\n<svelte:window\n  on:resize={() => {\n    const landscape = window.matchMedia(\"(orientation: landscape)\").matches;\n    if (landscape) {\n      document.body.classList.add(\"static\");\n    } else {\n      document.body.classList.remove(\"static\");\n    }\n  }}\n/>\n<main class:show-css={showCss}>\n  <div class=\"drag-wrapper-wrapper\" class:open={sidebarOpened}>\n    <DragWrapper height=\"100%\">\n      <svelte:component\n        this={world.getComponent()}\n        {...worldProps}\n        on:click-block={onClickBlock}\n      />\n    </DragWrapper>\n  </div>\n  <Sidebar opened={sidebarOpened}>\n    <button on:click={onClickStep}>step</button>\n    <Accordion title=\"Всяческое\">\n      <input type=\"range\" min=\"1\" max=\"240\" bind:value={$fps} />\n      <div>\n        <label>seed: <input type=\"number\" bind:value={seed} /></label>\n      </div>\n      <div>\n        checkboxes: {enabledGenes.join(\", \")}\n      </div>\n    </Accordion>\n    <Accordion title=\"Выделенный блок\">\n      <!--  -->\n      {#if selectedBlock}\n        <svelte:component\n          this={selectedBlock.getComponent()}\n          block={selectedBlock}\n          on:deselect={() => (selectedBlock = null)}\n        />\n      {/if}\n    </Accordion>\n    <Accordion title=\"Генофонд\" opened>\n      <CheckboxGroup\n        values={Object.entries(GENES).map(([value, template]) => ({\n          value,\n          content: template.name,\n          color: template.color?.interpolate(new Rgba(255, 255, 255, 255), 0.5),\n        }))}\n        bind:checked={enabledGenes}\n      />\n    </Accordion>\n    <Accordion title=\"Новый мир\">\n      <label>\n        Ширина<input type=\"number\" bind:value={newWorldWidth} />\n      </label>\n      <label>\n        Высота<input type=\"number\" bind:value={newWorldHeight} />\n      </label>\n      <button on:click={onClickRestart}>Рестарт</button>\n    </Accordion>\n    <Accordion title=\"dev\">\n      <label>\n        <input type=\"checkbox\" bind:checked={showCss} />\n        Показать сетку\n      </label>\n    </Accordion>\n  </Sidebar>\n  <ControlsPanel\n    bind:sidebarOpened\n    bind:play={$play}\n    on:step={onClickStep}\n    on:restart={onClickRestart}\n  />\n</main>\n\n<style>\n  main {\n    position: fixed;\n    inset: 0;\n  }\n  .drag-wrapper-wrapper {\n    height: 100%;\n    transition-duration: 0.2s;\n  }\n  .drag-wrapper-wrapper.open {\n    margin-left: 300px;\n  }\n  :global(.show-css *) {\n    outline: 1px solid rgba(0, 0, 0, 0.1) !important;\n  }\n  @media (prefers-color-scheme: dark) {\n    :global(.show-css *) {\n      outline: 1px solid rgba(255, 255, 255, 0.1) !important;\n    }\n  }\n</style>\n","export function loop(callBackFn, fps, play = true) {\n    const obj = {\n        stop() {\n            window.clearInterval(intervalId);\n            // console.log(`stop ${intervalId} loop`);\n            intervalId = undefined;\n            play = false;\n        },\n        start() {\n            if (!intervalId) {\n                intervalId = window.setInterval(callBackFn, 1000 / fps);\n                // console.log(`start ${intervalId} loop`);\n                play = true;\n            }\n        },\n        setFps(newFps, play = true) {\n            fps = newFps;\n            this.stop();\n            if (play)\n                this.start();\n        }\n    };\n    let intervalId = undefined;\n    if (play)\n        obj.start();\n    return obj;\n}\n","import App from './components/App.svelte';\nexport default new App({ target: document.body });\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","HtmlTag","constructor","this","e","n","c","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","d","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","bubbles","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","get_spread_update","levels","updates","to_null_out","accounted_for","key","get_spread_object","spread_props","bind","index","bound","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","title","viewBox","opened","mouseMoveInner","preventDefault","currentPos","clientX","initPos","clientY","body","style","cursor","clearMouseEvents","onMouseMove","onMouseUp","touchMoveInner","touches","clearTouchEvents","onTouchMove","onTouchEnd","height","x","_a","y","_b","width","switched","sidebarOpened","play","dispatch","random","initiallySeed","floor","Number","MAX_SAFE_INTEGER","setupRandom","seed","imul","console","log","randFloat","bottom","top","rand","randInt","randChoice","arr","clampCircular","min","number","clamp","lerp","Grid","cells","fixCoords","randCoords","randEmpty","coords","get","column","getOr","here","set","remove","swap","x2","y2","bufferA","bufferB","func","next","flat","prototype","concat","apply","Pixels","ImageData","super","setPixel","g","pointer","getPixel","mousePixelCoords","canvas","rect","getBoundingClientRect","x1","left","y1","pixelSize","updatePixels","imageData","imageSmoothingEnabled","tmpCanvas","tmpCtx","putImageData","updateMouse","mouse","clearRect","drawImage","beginPath","arc","PI","stroke","drawMouse","getContext","Rgba","red","green","blue","alpha","static","interpolate","other","toArray","toString","MAX_DIF","World","genePool","SquareWorld","step","blocks","pos","sort","live","getPixels","pixels","getColor","getComponentProps","getComponent","SquareWorldComponent","narrowToCoords","narrow","SQUARE_MOORE_NEIGHBOURHOOD","age","Bot","rgba","energy","abilities","genome","health","_narrow","multiply","pool","energyCoef","replication","onAttack","bot","REAL_VALUE","increaseAbility","ability","hasOwnProperty","world","doAction","BotComponent","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","NULL_GENE_TEMPLATE","description","defaultEnabled","color","colorInfluence","action","_bot","_x","_y","_world","_property","completed","goto","msg","NULL_GENE","template","property","option","branches","randGeneProperty","genomeLength","randGene","namesToGenePool","names","geneTemplates","geneName","geneTemplate","Genome","_pointer","genes","fillRandom","mutateGene","gene","MAX_ACTIONS","GENES","doNothing","fCoords","fBlock","rotate","photosynthesis","toFixed","attack","moveForward","F_COORDS","movePointer","includes","iterations","values","checked","content","toLowerCase","match","RegExp","group","__value","join","entries","stopLoop","intervalId","id","clearInterval","worldProps","selectedBlock","createWorld","fps","loop","callBackFn","setInterval","setFps","newFps","createLoop","$fps","$play","showCss","enabledGenes","_","newWorldWidth","newWorldHeight","newWorld","matchMedia","matches"],"mappings":"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"}